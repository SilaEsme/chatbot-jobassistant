<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABFxJREFUeF7t
        mktvE1cYhqMuyqL9A5XY8gO666YVVe2JnHFvHg8CtWkEi7BAipDaBayIRKVe1GV/QCk7oGKFShUFKJck
        JCEqt4QECLk4hZCQ2BlfZzz+er6Tb5LBHsfjmcbMWOeRXsnJufh73zkXW3KHQCAQCAS19Pf3vxWRk8ej
        sjIZlZMmE4RMrGZlUupS+tAL2XKPJCvfO0waSkXiydNkyx37VfVdNtConijE0tET2WtMJJb4wBp89Ni3
        YBhlCBtYM9Zu+UBPZK8xbMnstwZ+d+IUTRk+sPatAJgnstcYEYAIQAQQyADMQhHMbBagUqH/7Ez7BMAM
        5x9OQebaDS7t9jiYuTw11qdtAigtLG6Zt5T75x611qdtAsjdf1gTwMaNIWqtT+ACqBgGlNfTfC83Q+Hx
        k5oAtLE71FqfQAVgrL7iT80yUHgySy2NMYtFyPx9czsA9hrna0RgAqiUy7Bxc3jbAMlYW6ceO1NKLYE2
        MgrFuQUozs5BWWM3gQsCE0B5Q6sxjyo+m6ce9TELBb5y3IZlJzgrQNdfX8Ikffkl9agPnvaF6cf0V3ME
        JgC8s522gP78BfVwprT0L1/6uIW8EIgAuPmh23y5l9MZdqen+AGmv1yBzPVboL9Ypp6v42fpW7zxAMz8
        pvnCU+cTH4OoF0Lu7n3PS9+i5QGYuRwU5xehtJjiT5s/+afPqNUZfWV1MwS2HTAIXCl4RfpZ+hYtDcB4
        tcaN2Pd4YcbdE8TD0D6Oj/X59JGWBpAdm6gxkX80Q607g0+/eizeGnh7+KGlAdg/5Vly84UFKc7N14xF
        lTWNenijpQE4fWFBY24w2PeD6rEbt0bYoWJSD2+0NAD8gpMd394GGEgzBvgqoA9LaN7P9WfR0gA4lQqY
        2Ry/w72Ae54ve59P3qL1AQQMEYAIQAQgAvAdwOHePrj050AohbV7CuCTuJq0BraLIp8eUMheY6JdarfT
        JKEW80T2GmPfAolDR+Dk6V9CKazd8uH5DOjtOwHDUwu7ounUCpdT2/8hrD2wAcw+X6OzGvhrpz5+FegA
        UqsZsg+QWsk49vGrQAcwNpOC5XQWltez/LVTH7/yHkBMed8aeKC7F85dvg5/DAyFSlgz1r4VQDM/klJV
        9W02KG0NbgOlJan7HbLnjqisfM0GhvEXotUyJVnpIVvN0SknP4zGld/Zh4hRNtG4H3158PBcz9Hj4EbY
        12mOprRZ81mpK/ER2XlzxGKJvYMTU+edDionDYw+uNDZmXiPhocbSU4eZE+i8pn6jfnX8D1Hw3ZdvDIC
        sS8OVdgYvVNOfEzThJdoPDnIzPD9eObiZUfTdv362zn7/j1L04STWCy2h5nIoxkprsLg2KSjabtwBdgC
        WKKpwgkeQJaZr44cg6sT0w115c4j+Fzt2Q4hruyj6YJNJK78zArWtwrfPenRruRP9LbBgRWmVRW6m9Lo
        bYMDK+pHppKtyN1SSYorP9DbCgQCgUDgmY6O/wDD0zdKc4BO7AAAAABJRU5ErkJggg==
</value>
  </data>
</root>